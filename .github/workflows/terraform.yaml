on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
        description: The mode of the workflow (deploy/destroy)
      environment:
        required: true
        type: string
        description: The environment to deploy to
      site:
        type: string
        description: Site used for job execution on non multisite jobs
        required: true
      state_file:
        type: string
        description: Terraform State Filename
        required: true
      directory:
        type: string
        description: Terraform Working Directory
    secrets:
      mastertoken:
      arm_client_id:
      arm_client_secret:
      arm_subscription_id:
      arm_tenant_id:
      azure_storage_account_name:
      azure_storage_container_name:

jobs:
  plan:
    name: Terraform Plan
    runs-on: ${{ inputs.site }}
    defaults:
      run:
        working-directory: ./${{ inputs.directory }}
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Azure Login
        run: az login --service-principal -u ${{secrets.ARM_CLIENT_ID}} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
      - name: Terraform Init
        run: terraform init -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" -backend-config="key=${{ inputs.state_file }}" -backend-config="use_azuread_auth=true" -backend-config="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -backend-config="client_id=${{ secrets.ARM_CLIENT_ID }}"
      - name: Terraform Plan (Deploy Mode)
        run: terraform plan -out=tfplan
        if: inputs.mode == 'deploy'
      - name: Terraform Plan (Destroy Mode)
        run: terraform plan -out=tfplan -destroy
        if: inputs.mode == 'destroy'
      - name: Upload Plan for Apply
        run: az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --container-name ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }} --name plans/tfplan-${{ github.sha }} --file tfplan --auth-mode login



      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: tfplan
      #    path: ./${{ inputs.directory }}/tfplan
  apply:
    name: Terraform Apply
    runs-on: ${{ inputs.site }}
    defaults:
      run:
        working-directory: ./${{ inputs.directory }}
    needs: plan
    environment:
      name: ${{inputs.environment}}
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Azure Login
        run: az login --service-principal -u ${{secrets.ARM_CLIENT_ID}} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
      - name: Download Plan
        run: az storage blob download --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --container-name ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }} --name plans/tfplan-${{ github.sha }} --file tfplan



        #uses: actions/download-artifact@v3
        #with:
        #  name: tfplan
        #  path: ./${{ inputs.directory }}

      - name: Terraform Init
        run: terraform init -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" -backend-config="key=${{ inputs.state_file }}" -backend-config="use_azuread_auth=true" -backend-config="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -backend-config="client_id=${{ secrets.ARM_CLIENT_ID }}"
      - name: Terraform Apply
        run: terraform apply -auto-approve "tfplan"   
