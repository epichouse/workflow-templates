on:
    workflow_call:
      inputs:
        playbook:
            required: true
            type: string
            description: ansible playbook to be executed
        checkout_software:
            required: true
            type: boolean
            description: Checkout software repositorie
            default: false
        additional_parameters:
          type: string
          description: Additional Parameters to Ansible command
        ansible_verbose_logging:
          type: boolean
          default: false
          description: Enable or disable verbose logging
          required: false
      secrets:
        sudo_password:  
        mastertoken:
        vault_password:

jobs:
  london:
    runs-on: london
    name: london
    defaults:
      run:
        working-directory: "${{ github.event.repository.name }}"
    env:
      site: london
      verbose_logs: ""
    steps:
      - name: Checkout Repository (${{ github.event.repository.name }})
        uses: actions/checkout@v4
        with:
          path: "${{ github.event.repository.name }}"
      - name: Checkout Repository (ansible-core)
        uses: actions/checkout@v4
        with:
          path: ansible-core
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-core'
        if: ${{ github.event.repository.name != 'ansible-core' }}
      - name: Checkout Repository (ansible-vault)
        uses: actions/checkout@v4
        with:
          path: ansible-vault
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-vault'
      - name: Checkout Repository (ansible-roles)
        uses: actions/checkout@v4
        with:
          path: ansible-roles
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-roles'
      - name: Checkout Repository (bash)
        uses: actions/checkout@v4
        with:
          path: bash
          repository: 'epichouse/bash'
          ref: 'main'
          token: ${{secrets.mastertoken}}
      - name: Populate Vault Password File
        run: echo $PASS > ~/.vault
        shell: bash
        env:
          PASS: ${{ secrets.VAULT_PASSWORD }}
      - name: Determine Verbosity Setting
        run: echo "::set-output name=verbose_logs::-vvv"
        if: ${{ inputs.ansible_verbose_logging == true}}
      - name: Run Playbook
        run: ansible-playbook playbooks/${{ inputs.playbook }}.yml ${{ inputs.additional_parameters }} ${{ env.verbose_logs}} --extra-vars "ansible_sudo_pass=${{ secrets.SUDO_PASSWORD }} site=$site"
      - name: Cleanup Vault Password File
        run: rm ~/.vault
        if: always()
  manchester:
    runs-on: manchester
    name: manchester
    defaults:
      run:
        working-directory: "${{ github.event.repository.name }}"
    env:
      site: manchester
      verbose_logs: ""
    steps:
      - name: Checkout Repository (${{ github.event.repository.name }})
        uses: actions/checkout@v4
        with:
          path: "${{ github.event.repository.name }}"
      - name: Checkout Repository (ansible-core)
        uses: actions/checkout@v4
        with:
          path: ansible-core
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-core'
        if: ${{ github.event.repository.name != 'ansible-core' }}
      - name: Checkout Repository (ansible-vault)
        uses: actions/checkout@v4
        with:
          path: ansible-vault
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-vault'
      - name: Checkout Repository (ansible-roles)
        uses: actions/checkout@v4
        with:
          path: ansible-roles
          token: ${{secrets.mastertoken}}
          ref: 'main'
          repository: 'epichouse/ansible-roles'
      - name: Checkout Repository (bash)
        uses: actions/checkout@v4
        with:
          path: bash
          repository: 'epichouse/bash'
          ref: 'main'
          token: ${{secrets.mastertoken}}
      - name: Populate Vault Password File
        run: echo $PASS > ~/.vault
        shell: bash
        env:
          PASS: ${{ secrets.VAULT_PASSWORD }}
      - name: Determine Verbosity Setting
        run: echo "::set-output name=verbose_logs::-vvv"
        if: ${{ inputs.ansible_verbose_logging == true}}
      - name: Run Playbook
        run: ansible-playbook playbooks/${{ inputs.playbook }}.yml ${{ inputs.additional_parameters }} ${{ env.verbose_logs}}  --extra-vars "ansible_sudo_pass=${{ secrets.SUDO_PASSWORD }} site=$site"
      - name: Cleanup Vault Password File
        run: rm ~/.vault
        if: always()